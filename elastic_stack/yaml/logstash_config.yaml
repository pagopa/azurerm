apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: ${namespace}
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.yml: |
    http.host: 0.0.0.0
  pipelines.yml: |
    - pipeline.id: logstash
      path.config: "/usr/share/logstash/pipeline/logstash.conf"
    - pipeline.id: gelf
      path.config: "/usr/share/logstash/pipeline/gelf.conf"
  log4j2.properties: |
    logger.logstashpipeline.name = logstash.inputs.beats
    logger.logstashpipeline.level = error
 
---
 
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  namespace: ${namespace}
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    output {
      elasticsearch {
        hosts => [ "$${ES_HOST}" ]
        user => "$${ES_USERNAME}"
        password => "$${ES_PASSWORD}"
        ssl => true
        ssl_certificate_verification => false
        data_stream => "true"
        data_stream_type => "logs"
        data_stream_dataset => "generic"
        data_stream_namespace => "default"
      }
    }
  
  gelf.conf: |
    input {
      gelf {
        port => 12201
      }
    }

    filter {
      if ![app_name] or [app_name] == "" {
        mutate {add_field => { "[data_stream][dataset]" => "generic" }}
      } else {
        mutate {add_field => { "[data_stream][dataset]" => "%%{app_name}" }}
      }

      if ![app_environment] or [app_environment] == "" {
        mutate {add_field => { "[data_stream][namespace]" => "default" }}
      } else {
        mutate {add_field => { "[data_stream][namespace]" => "%%{app_environment}" }}
      }

      mutate {lowercase => [ "[data_stream][dataset]", "[data_stream][namespace]" ]}
    }

    output {
      stdout { codec => rubydebug { metadata => true } }
      elasticsearch {
        hosts => [ "$${ES_HOST}" ]
        user => "$${ES_USERNAME}"
        password => "$${ES_PASSWORD}"
        ssl => true
        ssl_certificate_verification => false
        data_stream => "true"
        data_stream_type => "logs"
      }
    }

    